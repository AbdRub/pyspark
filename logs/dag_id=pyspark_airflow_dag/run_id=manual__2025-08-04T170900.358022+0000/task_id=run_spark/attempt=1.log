{"timestamp":"2025-08-04T17:09:03.474802","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager"}
{"timestamp":"2025-08-04T17:09:03.482743","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/spark_example_dag.py","logger":"airflow.models.dagbag.DagBag"}
{"timestamp":"2025-08-04T17:09:12.692569Z","level":"error","event":"Setting default log level to \"WARN\".","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-04T17:09:12.693744Z","level":"error","event":"To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-04T17:09:13.158221Z","level":"error","event":"25/08/04 17:09:13 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable","chan":"stderr","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.759311Z","level":"info","event":"+------+-------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.760770Z","level":"info","event":"|  Tech|Version|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.761370Z","level":"info","event":"+------+-------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.761866Z","level":"info","event":"|Python|   3.11|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.762409Z","level":"info","event":"| Spark|    3.5|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.762964Z","level":"info","event":"|  Java|     17|","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.763560Z","level":"info","event":"+------+-------+","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:39.764260Z","level":"info","event":"","chan":"stdout","logger":"task"}
{"timestamp":"2025-08-04T17:09:46.057231","level":"info","event":"Done. Returned value was: None","logger":"airflow.task.operators.airflow.providers.standard.operators.python.PythonOperator"}
{"timestamp":"2025-08-04T17:09:46.550238Z","level":"error","event":"\r[Stage 0:>                                                          (0 + 1) / 1]\r\r                                                                                \r\r[Stage 1:==============>                                            (1 + 3) / 4]\r\r                                                                                \r\r[Stage 3:>                                                          (0 + 8) / 8]\r\r[Stage 3:======================>                                    (3 + 5) / 8]\r\r[Stage 3:=============================>                             (4 + 4) / 8]\r\r[Stage 3:====================================>                      (5 + 3) / 8]","chan":"stderr","logger":"task"}
